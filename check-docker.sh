#!/bin/bash

# ========================================
# SCRIPT DE VERIFICACI√ìN DE DOCKER
# Sistema de Control de Acceso
# ========================================

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para imprimir mensajes
print_message() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Funci√≥n para verificar si Docker est√° instalado
check_docker_installed() {
    print_info "Verificando instalaci√≥n de Docker..."
    
    if command -v docker &> /dev/null; then
        print_message "Docker est√° instalado"
        docker --version
        return 0
    else
        print_error "Docker no est√° instalado"
        return 1
    fi
}

# Funci√≥n para verificar si Docker est√° corriendo
check_docker_running() {
    print_info "Verificando que Docker est√© corriendo..."
    
    if docker info &> /dev/null; then
        print_message "Docker est√° corriendo"
        return 0
    else
        print_error "Docker no est√° corriendo"
        print_info "Por favor inicia Docker Desktop"
        return 1
    fi
}

# Funci√≥n para verificar si docker compose est√° disponible
check_docker_compose() {
    print_info "Verificando Docker Compose..."
    
    if docker compose version &> /dev/null; then
        print_message "Docker Compose est√° disponible"
        docker compose version
        return 0
    else
        print_error "Docker Compose no est√° disponible"
        print_info "Esto puede indicar que tienes una versi√≥n antigua de Docker"
        return 1
    fi
}

# Funci√≥n para verificar si docker-compose est√° disponible (versi√≥n antigua)
check_docker_compose_legacy() {
    print_info "Verificando Docker Compose (versi√≥n antigua)..."
    
    if command -v docker-compose &> /dev/null; then
        print_warning "Docker Compose (versi√≥n antigua) est√° disponible"
        docker-compose --version
        print_info "Se recomienda actualizar a Docker Compose V2"
        return 0
    else
        print_error "Docker Compose no est√° disponible"
        return 1
    fi
}

# Funci√≥n para mostrar instrucciones de instalaci√≥n
show_installation_instructions() {
    echo ""
    print_info "Instrucciones de instalaci√≥n de Docker:"
    echo ""
    echo "üì¶ macOS:"
    echo "  1. Descarga Docker Desktop desde: https://www.docker.com/products/docker-desktop"
    echo "  2. Instala Docker Desktop"
    echo "  3. Inicia Docker Desktop desde Applications"
    echo ""
    echo "üì¶ Windows:"
    echo "  1. Descarga Docker Desktop desde: https://www.docker.com/products/docker-desktop"
    echo "  2. Instala Docker Desktop"
    echo "  3. Inicia Docker Desktop"
    echo ""
    echo "üì¶ Linux (Ubuntu/Debian):"
    echo "  sudo apt update"
    echo "  sudo apt install docker.io docker-compose"
    echo "  sudo systemctl start docker"
    echo "  sudo systemctl enable docker"
    echo ""
    echo "üì¶ Linux (CentOS/RHEL):"
    echo "  sudo yum install docker docker-compose"
    echo "  sudo systemctl start docker"
    echo "  sudo systemctl enable docker"
    echo ""
}

# Funci√≥n para mostrar comandos corregidos
show_corrected_commands() {
    echo ""
    print_info "Comandos corregidos para usar:"
    echo ""
    echo "üê≥ Docker Compose V2 (recomendado):"
    echo "  docker compose -f docker-compose.override.yml up -d"
    echo "  docker compose -f docker-compose.override.yml down"
    echo "  docker compose -f docker-compose.override.yml logs"
    echo ""
    echo "üê≥ Docker Compose V1 (legacy):"
    echo "  docker-compose -f docker-compose.override.yml up -d"
    echo "  docker-compose -f docker-compose.override.yml down"
    echo "  docker-compose -f docker-compose.override.yml logs"
    echo ""
}

# Funci√≥n para crear alias si es necesario
create_docker_compose_alias() {
    print_info "Creando alias para docker-compose..."
    
    if ! command -v docker-compose &> /dev/null && docker compose version &> /dev/null; then
        echo 'alias docker-compose="docker compose"' >> ~/.bashrc
        echo 'alias docker-compose="docker compose"' >> ~/.zshrc
        print_message "Alias creado. Ejecuta 'source ~/.bashrc' o 'source ~/.zshrc' para activarlo"
    fi
}

# Funci√≥n principal
main() {
    echo "üîç Verificando configuraci√≥n de Docker..."
    echo "=========================================="
    echo ""
    
    # Verificar instalaci√≥n
    if ! check_docker_installed; then
        show_installation_instructions
        exit 1
    fi
    
    # Verificar que est√© corriendo
    if ! check_docker_running; then
        show_installation_instructions
        exit 1
    fi
    
    # Verificar Docker Compose
    if check_docker_compose; then
        print_message "Docker Compose V2 est√° disponible"
        show_corrected_commands
    elif check_docker_compose_legacy; then
        print_warning "Usando Docker Compose V1 (legacy)"
        show_corrected_commands
    else
        print_error "Docker Compose no est√° disponible"
        show_installation_instructions
        exit 1
    fi
    
    # Crear alias si es necesario
    create_docker_compose_alias
    
    echo ""
    print_message "Verificaci√≥n completada"
    echo ""
    print_info "Para usar el sistema con Docker:"
    echo "  docker compose -f docker-compose.override.yml up -d"
    echo ""
}

# Ejecutar funci√≥n principal
main "$@"
